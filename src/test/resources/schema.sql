CREATE TABLE BOOKINGSTATUS(
  BOOKINGSTATUS_ID BIGSERIAL PRIMARY KEY,
  NAME VARCHAR(64)
);

CREATE TABLE ROLE(
  ROLE_ID BIGSERIAL PRIMARY KEY,
  NAME VARCHAR(64)
);

CREATE TABLE PRODUCT(
  PRODUCT_ID BIGSERIAL PRIMARY KEY,
  NAME VARCHAR(64) NOT NULL,
  DESCRIPTION VARCHAR(600),
  AUTHOR VARCHAR(64),
  PRICE FLOAT,
  IMAGE_PATH VARCHAR(128)
);

CREATE TABLE USERS(
  USER_ID BIGSERIAL PRIMARY KEY,
  NAME VARCHAR(64),
  ADDRESS VARCHAR(64),
  EMAIL VARCHAR(64),
  PHONE VARCHAR(24),
  ROLE_ID BIGINT NOT NULL,
  LOGIN VARCHAR(24),
  PASSWORD VARCHAR(24)
);

ALTER TABLE USERS ADD FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID);

CREATE TABLE BOOKING(
  BOOKING_ID BIGSERIAL PRIMARY KEY,
  USER_ID BIGINT NOT NULL,
  PRODUCT_ID BIGINT NOT NULL,
  DELIVERY_ADDRESS VARCHAR(64),
  DELIVERY_DATE DATE,
  DELIVERY_TIME TIME,
  BOOKINGSTATUS_ID BIGINT NOT NULL,
  QUANTITY INTEGER
);

ALTER TABLE BOOKING ADD FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID);
ALTER TABLE BOOKING ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);
ALTER TABLE BOOKING ADD FOREIGN KEY (BOOKINGSTATUS_ID) REFERENCES BOOKINGSTATUS(BOOKINGSTATUS_ID);



CREATE TABLE BOOKSTORE(
  BOOKSTORE_ID BIGSERIAL PRIMARY KEY,
  PRODUCT_ID BIGINT NOT NULL,
  AVAILABLE_QTY INTEGER,
  BOOKED_QTY INTEGER,
  SOLD_QTY INTEGER
);

ALTER TABLE BOOKSTORE ADD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID);





